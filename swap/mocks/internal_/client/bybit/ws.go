// Code generated by mockery v2.46.3. DO NOT EDIT.

package bybit

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Mockws is an autogenerated mock type for the ws type
type Mockws struct {
	mock.Mock
}

type Mockws_Expecter struct {
	mock *mock.Mock
}

func (_m *Mockws) EXPECT() *Mockws_Expecter {
	return &Mockws_Expecter{mock: &_m.Mock}
}

// listen provides a mock function with given fields: ctx
func (_m *Mockws) listen(ctx context.Context) {
	_m.Called(ctx)
}

// Mockws_listen_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'listen'
type Mockws_listen_Call struct {
	*mock.Call
}

// listen is a helper method to define mock.On call
//   - ctx context.Context
func (_e *Mockws_Expecter) listen(ctx interface{}) *Mockws_listen_Call {
	return &Mockws_listen_Call{Call: _e.mock.On("listen", ctx)}
}

func (_c *Mockws_listen_Call) Run(run func(ctx context.Context)) *Mockws_listen_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *Mockws_listen_Call) Return() *Mockws_listen_Call {
	_c.Call.Return()
	return _c
}

func (_c *Mockws_listen_Call) RunAndReturn(run func(context.Context)) *Mockws_listen_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockws creates a new instance of Mockws. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockws(t interface {
	mock.TestingT
	Cleanup(func())
}) *Mockws {
	mock := &Mockws{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
