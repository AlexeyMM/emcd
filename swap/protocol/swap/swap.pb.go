// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.0
// source: protocol/proto/swap.proto

package swap

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SwapStatus int32

const (
	SwapStatus_SWAP_STATUS_UNKNOWN               SwapStatus = 0
	SwapStatus_WAIT_DEPOSIT                      SwapStatus = 1
	SwapStatus_CHECK_DEPOSIT                     SwapStatus = 2
	SwapStatus_DEPOSIT_ERROR                     SwapStatus = 3 // Deprecated
	SwapStatus_TRANSFER_TO_UNIFIED               SwapStatus = 4
	SwapStatus_CREATE_ORDER                      SwapStatus = 5
	SwapStatus_PLACE_ORDER                       SwapStatus = 6
	SwapStatus_CHECK_ORDER                       SwapStatus = 7
	SwapStatus_PLACE_ADDITIONAL_ORDER            SwapStatus = 8
	SwapStatus_CHECK_ADDITIONAL_ORDER            SwapStatus = 9
	SwapStatus_TRANSFER_FROM_SUB_TO_MASTER       SwapStatus = 10
	SwapStatus_CHECK_TRANSFER_FROM_SUB_TO_MASTER SwapStatus = 11
	SwapStatus_PREPARE_WITHDRAW                  SwapStatus = 12
	SwapStatus_WITHDRAW_SWAP_STATUS              SwapStatus = 13
	SwapStatus_WAIT_WITHDRAW                     SwapStatus = 14
	SwapStatus_COMPLETED                         SwapStatus = 15
	SwapStatus_CANCEL                            SwapStatus = 16
	SwapStatus_ERROR                             SwapStatus = 17
	SwapStatus_MANUAL_COMPLETED                  SwapStatus = 18
)

// Enum value maps for SwapStatus.
var (
	SwapStatus_name = map[int32]string{
		0:  "SWAP_STATUS_UNKNOWN",
		1:  "WAIT_DEPOSIT",
		2:  "CHECK_DEPOSIT",
		3:  "DEPOSIT_ERROR",
		4:  "TRANSFER_TO_UNIFIED",
		5:  "CREATE_ORDER",
		6:  "PLACE_ORDER",
		7:  "CHECK_ORDER",
		8:  "PLACE_ADDITIONAL_ORDER",
		9:  "CHECK_ADDITIONAL_ORDER",
		10: "TRANSFER_FROM_SUB_TO_MASTER",
		11: "CHECK_TRANSFER_FROM_SUB_TO_MASTER",
		12: "PREPARE_WITHDRAW",
		13: "WITHDRAW_SWAP_STATUS",
		14: "WAIT_WITHDRAW",
		15: "COMPLETED",
		16: "CANCEL",
		17: "ERROR",
		18: "MANUAL_COMPLETED",
	}
	SwapStatus_value = map[string]int32{
		"SWAP_STATUS_UNKNOWN":               0,
		"WAIT_DEPOSIT":                      1,
		"CHECK_DEPOSIT":                     2,
		"DEPOSIT_ERROR":                     3,
		"TRANSFER_TO_UNIFIED":               4,
		"CREATE_ORDER":                      5,
		"PLACE_ORDER":                       6,
		"CHECK_ORDER":                       7,
		"PLACE_ADDITIONAL_ORDER":            8,
		"CHECK_ADDITIONAL_ORDER":            9,
		"TRANSFER_FROM_SUB_TO_MASTER":       10,
		"CHECK_TRANSFER_FROM_SUB_TO_MASTER": 11,
		"PREPARE_WITHDRAW":                  12,
		"WITHDRAW_SWAP_STATUS":              13,
		"WAIT_WITHDRAW":                     14,
		"COMPLETED":                         15,
		"CANCEL":                            16,
		"ERROR":                             17,
		"MANUAL_COMPLETED":                  18,
	}
)

func (x SwapStatus) Enum() *SwapStatus {
	p := new(SwapStatus)
	*p = x
	return p
}

func (x SwapStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SwapStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_swap_proto_enumTypes[0].Descriptor()
}

func (SwapStatus) Type() protoreflect.EnumType {
	return &file_protocol_proto_swap_proto_enumTypes[0]
}

func (x SwapStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SwapStatus.Descriptor instead.
func (SwapStatus) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{0}
}

type GetSwapByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSwapByIDRequest) Reset() {
	*x = GetSwapByIDRequest{}
	mi := &file_protocol_proto_swap_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSwapByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwapByIDRequest) ProtoMessage() {}

func (x *GetSwapByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swap_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwapByIDRequest.ProtoReflect.Descriptor instead.
func (*GetSwapByIDRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{0}
}

func (x *GetSwapByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSwapByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinFrom     string       `protobuf:"bytes,1,opt,name=coin_from,json=coinFrom,proto3" json:"coin_from,omitempty"`
	CoinTo       string       `protobuf:"bytes,2,opt,name=coin_to,json=coinTo,proto3" json:"coin_to,omitempty"`
	NetworkFrom  string       `protobuf:"bytes,3,opt,name=network_from,json=networkFrom,proto3" json:"network_from,omitempty"`
	NetworkTo    string       `protobuf:"bytes,4,opt,name=network_to,json=networkTo,proto3" json:"network_to,omitempty"`
	AmountFrom   string       `protobuf:"bytes,5,opt,name=amount_from,json=amountFrom,proto3" json:"amount_from,omitempty"`
	AmountTo     string       `protobuf:"bytes,6,opt,name=amount_to,json=amountTo,proto3" json:"amount_to,omitempty"`
	AddressFrom  *AddressData `protobuf:"bytes,7,opt,name=address_from,json=addressFrom,proto3" json:"address_from,omitempty"`
	AddressTo    *AddressData `protobuf:"bytes,8,opt,name=address_to,json=addressTo,proto3" json:"address_to,omitempty"`
	Status       int32        `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	StartTime    int32        `protobuf:"varint,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	SwapDuration int32        `protobuf:"varint,11,opt,name=swap_duration,json=swapDuration,proto3" json:"swap_duration,omitempty"`
	Rate         string       `protobuf:"bytes,12,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *GetSwapByIDResponse) Reset() {
	*x = GetSwapByIDResponse{}
	mi := &file_protocol_proto_swap_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSwapByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwapByIDResponse) ProtoMessage() {}

func (x *GetSwapByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swap_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwapByIDResponse.ProtoReflect.Descriptor instead.
func (*GetSwapByIDResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{1}
}

func (x *GetSwapByIDResponse) GetCoinFrom() string {
	if x != nil {
		return x.CoinFrom
	}
	return ""
}

func (x *GetSwapByIDResponse) GetCoinTo() string {
	if x != nil {
		return x.CoinTo
	}
	return ""
}

func (x *GetSwapByIDResponse) GetNetworkFrom() string {
	if x != nil {
		return x.NetworkFrom
	}
	return ""
}

func (x *GetSwapByIDResponse) GetNetworkTo() string {
	if x != nil {
		return x.NetworkTo
	}
	return ""
}

func (x *GetSwapByIDResponse) GetAmountFrom() string {
	if x != nil {
		return x.AmountFrom
	}
	return ""
}

func (x *GetSwapByIDResponse) GetAmountTo() string {
	if x != nil {
		return x.AmountTo
	}
	return ""
}

func (x *GetSwapByIDResponse) GetAddressFrom() *AddressData {
	if x != nil {
		return x.AddressFrom
	}
	return nil
}

func (x *GetSwapByIDResponse) GetAddressTo() *AddressData {
	if x != nil {
		return x.AddressTo
	}
	return nil
}

func (x *GetSwapByIDResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSwapByIDResponse) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetSwapByIDResponse) GetSwapDuration() int32 {
	if x != nil {
		return x.SwapDuration
	}
	return 0
}

func (x *GetSwapByIDResponse) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

type AddressData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Tag     string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *AddressData) Reset() {
	*x = AddressData{}
	mi := &file_protocol_proto_swap_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressData) ProtoMessage() {}

func (x *AddressData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swap_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressData.ProtoReflect.Descriptor instead.
func (*AddressData) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{2}
}

func (x *AddressData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressData) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type EstimateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinFrom    string `protobuf:"bytes,1,opt,name=coin_from,json=coinFrom,proto3" json:"coin_from,omitempty"`
	CoinTo      string `protobuf:"bytes,2,opt,name=coin_to,json=coinTo,proto3" json:"coin_to,omitempty"`
	NetworkFrom string `protobuf:"bytes,3,opt,name=network_from,json=networkFrom,proto3" json:"network_from,omitempty"`
	NetworkTo   string `protobuf:"bytes,4,opt,name=network_to,json=networkTo,proto3" json:"network_to,omitempty"`
	AmountFrom  string `protobuf:"bytes,5,opt,name=amount_from,json=amountFrom,proto3" json:"amount_from,omitempty"`
	AmountTo    string `protobuf:"bytes,6,opt,name=amount_to,json=amountTo,proto3" json:"amount_to,omitempty"`
}

func (x *EstimateRequest) Reset() {
	*x = EstimateRequest{}
	mi := &file_protocol_proto_swap_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateRequest) ProtoMessage() {}

func (x *EstimateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swap_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateRequest.ProtoReflect.Descriptor instead.
func (*EstimateRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{3}
}

func (x *EstimateRequest) GetCoinFrom() string {
	if x != nil {
		return x.CoinFrom
	}
	return ""
}

func (x *EstimateRequest) GetCoinTo() string {
	if x != nil {
		return x.CoinTo
	}
	return ""
}

func (x *EstimateRequest) GetNetworkFrom() string {
	if x != nil {
		return x.NetworkFrom
	}
	return ""
}

func (x *EstimateRequest) GetNetworkTo() string {
	if x != nil {
		return x.NetworkTo
	}
	return ""
}

func (x *EstimateRequest) GetAmountFrom() string {
	if x != nil {
		return x.AmountFrom
	}
	return ""
}

func (x *EstimateRequest) GetAmountTo() string {
	if x != nil {
		return x.AmountTo
	}
	return ""
}

type EstimateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmountFrom string `protobuf:"bytes,1,opt,name=amount_from,json=amountFrom,proto3" json:"amount_from,omitempty"`
	AmountTo   string `protobuf:"bytes,2,opt,name=amount_to,json=amountTo,proto3" json:"amount_to,omitempty"`
	Rate       string `protobuf:"bytes,3,opt,name=rate,proto3" json:"rate,omitempty"`
	MinFrom    string `protobuf:"bytes,4,opt,name=min_from,json=minFrom,proto3" json:"min_from,omitempty"`
	MaxFrom    string `protobuf:"bytes,5,opt,name=max_from,json=maxFrom,proto3" json:"max_from,omitempty"`
}

func (x *EstimateResponse) Reset() {
	*x = EstimateResponse{}
	mi := &file_protocol_proto_swap_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateResponse) ProtoMessage() {}

func (x *EstimateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swap_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateResponse.ProtoReflect.Descriptor instead.
func (*EstimateResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{4}
}

func (x *EstimateResponse) GetAmountFrom() string {
	if x != nil {
		return x.AmountFrom
	}
	return ""
}

func (x *EstimateResponse) GetAmountTo() string {
	if x != nil {
		return x.AmountTo
	}
	return ""
}

func (x *EstimateResponse) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *EstimateResponse) GetMinFrom() string {
	if x != nil {
		return x.MinFrom
	}
	return ""
}

func (x *EstimateResponse) GetMaxFrom() string {
	if x != nil {
		return x.MaxFrom
	}
	return ""
}

type PrepareSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinFrom    string       `protobuf:"bytes,1,opt,name=coin_from,json=coinFrom,proto3" json:"coin_from,omitempty"`
	CoinTo      string       `protobuf:"bytes,2,opt,name=coin_to,json=coinTo,proto3" json:"coin_to,omitempty"`
	NetworkFrom string       `protobuf:"bytes,3,opt,name=network_from,json=networkFrom,proto3" json:"network_from,omitempty"`
	NetworkTo   string       `protobuf:"bytes,4,opt,name=network_to,json=networkTo,proto3" json:"network_to,omitempty"`
	AmountFrom  string       `protobuf:"bytes,5,opt,name=amount_from,json=amountFrom,proto3" json:"amount_from,omitempty"`
	AmountTo    string       `protobuf:"bytes,6,opt,name=amount_to,json=amountTo,proto3" json:"amount_to,omitempty"`
	AddressTo   *AddressData `protobuf:"bytes,7,opt,name=address_to,json=addressTo,proto3" json:"address_to,omitempty"`
	ParentId    string       `protobuf:"bytes,8,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
}

func (x *PrepareSwapRequest) Reset() {
	*x = PrepareSwapRequest{}
	mi := &file_protocol_proto_swap_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareSwapRequest) ProtoMessage() {}

func (x *PrepareSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swap_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareSwapRequest.ProtoReflect.Descriptor instead.
func (*PrepareSwapRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{5}
}

func (x *PrepareSwapRequest) GetCoinFrom() string {
	if x != nil {
		return x.CoinFrom
	}
	return ""
}

func (x *PrepareSwapRequest) GetCoinTo() string {
	if x != nil {
		return x.CoinTo
	}
	return ""
}

func (x *PrepareSwapRequest) GetNetworkFrom() string {
	if x != nil {
		return x.NetworkFrom
	}
	return ""
}

func (x *PrepareSwapRequest) GetNetworkTo() string {
	if x != nil {
		return x.NetworkTo
	}
	return ""
}

func (x *PrepareSwapRequest) GetAmountFrom() string {
	if x != nil {
		return x.AmountFrom
	}
	return ""
}

func (x *PrepareSwapRequest) GetAmountTo() string {
	if x != nil {
		return x.AmountTo
	}
	return ""
}

func (x *PrepareSwapRequest) GetAddressTo() *AddressData {
	if x != nil {
		return x.AddressTo
	}
	return nil
}

func (x *PrepareSwapRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

type PrepareSwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DepositAddress *AddressData `protobuf:"bytes,2,opt,name=deposit_address,json=depositAddress,proto3" json:"deposit_address,omitempty"`
}

func (x *PrepareSwapResponse) Reset() {
	*x = PrepareSwapResponse{}
	mi := &file_protocol_proto_swap_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareSwapResponse) ProtoMessage() {}

func (x *PrepareSwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swap_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareSwapResponse.ProtoReflect.Descriptor instead.
func (*PrepareSwapResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{6}
}

func (x *PrepareSwapResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PrepareSwapResponse) GetDepositAddress() *AddressData {
	if x != nil {
		return x.DepositAddress
	}
	return nil
}

type StartSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwapId   string `protobuf:"bytes,1,opt,name=swap_id,json=swapId,proto3" json:"swap_id,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *StartSwapRequest) Reset() {
	*x = StartSwapRequest{}
	mi := &file_protocol_proto_swap_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSwapRequest) ProtoMessage() {}

func (x *StartSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swap_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSwapRequest.ProtoReflect.Descriptor instead.
func (*StartSwapRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{7}
}

func (x *StartSwapRequest) GetSwapId() string {
	if x != nil {
		return x.SwapId
	}
	return ""
}

func (x *StartSwapRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *StartSwapRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type StartSwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartSwapResponse) Reset() {
	*x = StartSwapResponse{}
	mi := &file_protocol_proto_swap_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSwapResponse) ProtoMessage() {}

func (x *StartSwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swap_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSwapResponse.ProtoReflect.Descriptor instead.
func (*StartSwapResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{8}
}

type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwapId string `protobuf:"bytes,1,opt,name=swap_id,json=swapId,proto3" json:"swap_id,omitempty"`
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_protocol_proto_swap_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swap_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{9}
}

func (x *StatusRequest) GetSwapId() string {
	if x != nil {
		return x.SwapId
	}
	return ""
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_protocol_proto_swap_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swap_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swap_proto_rawDescGZIP(), []int{10}
}

func (x *StatusResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_protocol_proto_swap_proto protoreflect.FileDescriptor

var file_protocol_proto_swap_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x77, 0x61,
	0x70, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa3, 0x03, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53,
	0x77, 0x61, 0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x6f, 0x12, 0x34, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x77,
	0x61, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x0a, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x77, 0x61,
	0x70, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x39, 0x0a,
	0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0xc7, 0x01, 0x0a, 0x0f, 0x45, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x69, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e,
	0x54, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x54, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x10, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x22,
	0x99, 0x02, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x6f, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x12, 0x30, 0x0a, 0x0a,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x13, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x77,
	0x61, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x5d,
	0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x77, 0x61, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x13, 0x0a,
	0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x28, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x77, 0x61, 0x70, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0xa9, 0x03, 0x0a, 0x0a, 0x53, 0x77, 0x61, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x57, 0x41, 0x50, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46,
	0x45, 0x52, 0x5f, 0x54, 0x4f, 0x5f, 0x55, 0x4e, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10,
	0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x44, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x08, 0x12,
	0x1a, 0x0a, 0x16, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x41, 0x4c, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x09, 0x12, 0x1f, 0x0a, 0x1b, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x53, 0x55, 0x42,
	0x5f, 0x54, 0x4f, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x10, 0x0a, 0x12, 0x25, 0x0a, 0x21,
	0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x46,
	0x52, 0x4f, 0x4d, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x54, 0x4f, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45,
	0x52, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x5f, 0x57,
	0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x10, 0x0c, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x49, 0x54,
	0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x53, 0x57, 0x41, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x10, 0x0d, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x57, 0x49, 0x54, 0x48,
	0x44, 0x52, 0x41, 0x57, 0x10, 0x0e, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x0f, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10,
	0x10, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x11, 0x12, 0x14, 0x0a, 0x10,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x12, 0x32, 0xc7, 0x02, 0x0a, 0x0b, 0x53, 0x77, 0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x45, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x0b, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x53, 0x77, 0x61, 0x70, 0x12, 0x18, 0x2e, 0x73,
	0x77, 0x61, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x77, 0x61, 0x70, 0x12, 0x16,
	0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x35, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x73, 0x77,
	0x61, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53,
	0x77, 0x61, 0x70, 0x42, 0x79, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2f, 0x5a, 0x2d,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x65, 0x6d, 0x63, 0x64, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x62, 0x32, 0x62, 0x2f, 0x73, 0x77, 0x61, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x73, 0x77, 0x61, 0x70, 0x3b, 0x73, 0x77, 0x61, 0x70, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_proto_swap_proto_rawDescOnce sync.Once
	file_protocol_proto_swap_proto_rawDescData = file_protocol_proto_swap_proto_rawDesc
)

func file_protocol_proto_swap_proto_rawDescGZIP() []byte {
	file_protocol_proto_swap_proto_rawDescOnce.Do(func() {
		file_protocol_proto_swap_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_proto_swap_proto_rawDescData)
	})
	return file_protocol_proto_swap_proto_rawDescData
}

var file_protocol_proto_swap_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protocol_proto_swap_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_protocol_proto_swap_proto_goTypes = []any{
	(SwapStatus)(0),             // 0: swap.SwapStatus
	(*GetSwapByIDRequest)(nil),  // 1: swap.GetSwapByIDRequest
	(*GetSwapByIDResponse)(nil), // 2: swap.GetSwapByIDResponse
	(*AddressData)(nil),         // 3: swap.AddressData
	(*EstimateRequest)(nil),     // 4: swap.EstimateRequest
	(*EstimateResponse)(nil),    // 5: swap.EstimateResponse
	(*PrepareSwapRequest)(nil),  // 6: swap.PrepareSwapRequest
	(*PrepareSwapResponse)(nil), // 7: swap.PrepareSwapResponse
	(*StartSwapRequest)(nil),    // 8: swap.StartSwapRequest
	(*StartSwapResponse)(nil),   // 9: swap.StartSwapResponse
	(*StatusRequest)(nil),       // 10: swap.StatusRequest
	(*StatusResponse)(nil),      // 11: swap.StatusResponse
}
var file_protocol_proto_swap_proto_depIdxs = []int32{
	3,  // 0: swap.GetSwapByIDResponse.address_from:type_name -> swap.AddressData
	3,  // 1: swap.GetSwapByIDResponse.address_to:type_name -> swap.AddressData
	3,  // 2: swap.PrepareSwapRequest.address_to:type_name -> swap.AddressData
	3,  // 3: swap.PrepareSwapResponse.deposit_address:type_name -> swap.AddressData
	4,  // 4: swap.SwapService.Estimate:input_type -> swap.EstimateRequest
	6,  // 5: swap.SwapService.PrepareSwap:input_type -> swap.PrepareSwapRequest
	8,  // 6: swap.SwapService.StartSwap:input_type -> swap.StartSwapRequest
	10, // 7: swap.SwapService.Status:input_type -> swap.StatusRequest
	1,  // 8: swap.SwapService.GetSwapByID:input_type -> swap.GetSwapByIDRequest
	5,  // 9: swap.SwapService.Estimate:output_type -> swap.EstimateResponse
	7,  // 10: swap.SwapService.PrepareSwap:output_type -> swap.PrepareSwapResponse
	9,  // 11: swap.SwapService.StartSwap:output_type -> swap.StartSwapResponse
	11, // 12: swap.SwapService.Status:output_type -> swap.StatusResponse
	2,  // 13: swap.SwapService.GetSwapByID:output_type -> swap.GetSwapByIDResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_protocol_proto_swap_proto_init() }
func file_protocol_proto_swap_proto_init() {
	if File_protocol_proto_swap_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_proto_swap_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocol_proto_swap_proto_goTypes,
		DependencyIndexes: file_protocol_proto_swap_proto_depIdxs,
		EnumInfos:         file_protocol_proto_swap_proto_enumTypes,
		MessageInfos:      file_protocol_proto_swap_proto_msgTypes,
	}.Build()
	File_protocol_proto_swap_proto = out.File
	file_protocol_proto_swap_proto_rawDesc = nil
	file_protocol_proto_swap_proto_goTypes = nil
	file_protocol_proto_swap_proto_depIdxs = nil
}
