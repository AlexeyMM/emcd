// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.0
// source: protocol/proto/swapCoin.proto

package swapCoin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Accuracy          int32  `protobuf:"varint,2,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	WithdrawSupported bool   `protobuf:"varint,3,opt,name=withdraw_supported,json=withdrawSupported,proto3" json:"withdraw_supported,omitempty"`
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_protocol_proto_swapCoin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swapCoin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swapCoin_proto_rawDescGZIP(), []int{0}
}

func (x *Network) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Network) GetAccuracy() int32 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *Network) GetWithdrawSupported() bool {
	if x != nil {
		return x.WithdrawSupported
	}
	return false
}

type Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Networks []*Network `protobuf:"bytes,2,rep,name=networks,proto3" json:"networks,omitempty"`
	IconUrl  string     `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
}

func (x *Coin) Reset() {
	*x = Coin{}
	mi := &file_protocol_proto_swapCoin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swapCoin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swapCoin_proto_rawDescGZIP(), []int{1}
}

func (x *Coin) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Coin) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *Coin) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

type GetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRequest) Reset() {
	*x = GetAllRequest{}
	mi := &file_protocol_proto_swapCoin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRequest) ProtoMessage() {}

func (x *GetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swapCoin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRequest.ProtoReflect.Descriptor instead.
func (*GetAllRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swapCoin_proto_rawDescGZIP(), []int{2}
}

type GetAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins []*Coin `protobuf:"bytes,1,rep,name=coins,proto3" json:"coins,omitempty"`
}

func (x *GetAllResponse) Reset() {
	*x = GetAllResponse{}
	mi := &file_protocol_proto_swapCoin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllResponse) ProtoMessage() {}

func (x *GetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_swapCoin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllResponse.ProtoReflect.Descriptor instead.
func (*GetAllResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_swapCoin_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllResponse) GetCoins() []*Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

var File_protocol_proto_swapCoin_proto protoreflect.FileDescriptor

var file_protocol_proto_swapCoin_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x73, 0x77, 0x61, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x73, 0x77, 0x61, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0x6a, 0x0a, 0x07, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63,
	0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63,
	0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0x66, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x43, 0x6f, 0x69, 0x6e,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x22, 0x0f, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52,
	0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x32, 0x4e, 0x0a, 0x0f, 0x53, 0x77, 0x61, 0x70, 0x43, 0x6f,
	0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x12, 0x17, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73,
	0x77, 0x61, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x65,
	0x6d, 0x63, 0x64, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x32, 0x62, 0x2f,
	0x73, 0x77, 0x61, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x73, 0x77,
	0x61, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x3b, 0x73, 0x77, 0x61, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_proto_swapCoin_proto_rawDescOnce sync.Once
	file_protocol_proto_swapCoin_proto_rawDescData = file_protocol_proto_swapCoin_proto_rawDesc
)

func file_protocol_proto_swapCoin_proto_rawDescGZIP() []byte {
	file_protocol_proto_swapCoin_proto_rawDescOnce.Do(func() {
		file_protocol_proto_swapCoin_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_proto_swapCoin_proto_rawDescData)
	})
	return file_protocol_proto_swapCoin_proto_rawDescData
}

var file_protocol_proto_swapCoin_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protocol_proto_swapCoin_proto_goTypes = []any{
	(*Network)(nil),        // 0: swapCoin.Network
	(*Coin)(nil),           // 1: swapCoin.Coin
	(*GetAllRequest)(nil),  // 2: swapCoin.GetAllRequest
	(*GetAllResponse)(nil), // 3: swapCoin.GetAllResponse
}
var file_protocol_proto_swapCoin_proto_depIdxs = []int32{
	0, // 0: swapCoin.Coin.networks:type_name -> swapCoin.Network
	1, // 1: swapCoin.GetAllResponse.coins:type_name -> swapCoin.Coin
	2, // 2: swapCoin.SwapCoinService.GetAll:input_type -> swapCoin.GetAllRequest
	3, // 3: swapCoin.SwapCoinService.GetAll:output_type -> swapCoin.GetAllResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_protocol_proto_swapCoin_proto_init() }
func file_protocol_proto_swapCoin_proto_init() {
	if File_protocol_proto_swapCoin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_proto_swapCoin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocol_proto_swapCoin_proto_goTypes,
		DependencyIndexes: file_protocol_proto_swapCoin_proto_depIdxs,
		MessageInfos:      file_protocol_proto_swapCoin_proto_msgTypes,
	}.Build()
	File_protocol_proto_swapCoin_proto = out.File
	file_protocol_proto_swapCoin_proto_rawDesc = nil
	file_protocol_proto_swapCoin_proto_goTypes = nil
	file_protocol_proto_swapCoin_proto_depIdxs = nil
}
