// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: invoice_form.sql

package sqlc

import (
	"context"
	"time"

	uuid "github.com/google/uuid"
	decimal "github.com/shopspring/decimal"
)

const CreateInvoiceForm = `-- name: CreateInvoiceForm :exec
INSERT INTO invoice_form (
    id,
    merchant_id,
    coin_id,
    network_id,
    amount,
    title,
    description,
    buyer_email,
    checkout_url,
    external_id,
    expires_at
) VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8,
    $9,
    $10,
    $11
)
`

type CreateInvoiceFormParams struct {
	ID          uuid.UUID        `db:"id"`
	MerchantID  uuid.UUID        `db:"merchant_id"`
	CoinID      *string          `db:"coin_id"`
	NetworkID   *string          `db:"network_id"`
	Amount      *decimal.Decimal `db:"amount"`
	Title       *string          `db:"title"`
	Description *string          `db:"description"`
	BuyerEmail  *string          `db:"buyer_email"`
	CheckoutUrl string           `db:"checkout_url"`
	ExternalID  *string          `db:"external_id"`
	ExpiresAt   *time.Time       `db:"expires_at"`
}

func (q *Queries) CreateInvoiceForm(ctx context.Context, arg *CreateInvoiceFormParams) error {
	_, err := q.db.Exec(ctx, CreateInvoiceForm,
		arg.ID,
		arg.MerchantID,
		arg.CoinID,
		arg.NetworkID,
		arg.Amount,
		arg.Title,
		arg.Description,
		arg.BuyerEmail,
		arg.CheckoutUrl,
		arg.ExternalID,
		arg.ExpiresAt,
	)
	return err
}

const GetInvoiceForm = `-- name: GetInvoiceForm :one
SELECT id, merchant_id, coin_id, network_id, amount, title, description, buyer_email, checkout_url, external_id, expires_at FROM invoice_form WHERE id = $1
`

func (q *Queries) GetInvoiceForm(ctx context.Context, id uuid.UUID) (InvoiceForm, error) {
	row := q.db.QueryRow(ctx, GetInvoiceForm, id)
	var i InvoiceForm
	err := row.Scan(
		&i.ID,
		&i.MerchantID,
		&i.CoinID,
		&i.NetworkID,
		&i.Amount,
		&i.Title,
		&i.Description,
		&i.BuyerEmail,
		&i.CheckoutUrl,
		&i.ExternalID,
		&i.ExpiresAt,
	)
	return i, err
}
