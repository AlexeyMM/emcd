// Code generated by mockery v2.43.2. DO NOT EDIT.

package repository

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// MockWhiteLabel is an autogenerated mock type for the WhiteLabel type
type MockWhiteLabel struct {
	mock.Mock
}

type MockWhiteLabel_Expecter struct {
	mock *mock.Mock
}

func (_m *MockWhiteLabel) EXPECT() *MockWhiteLabel_Expecter {
	return &MockWhiteLabel_Expecter{mock: &_m.Mock}
}

// GetUserIDByID provides a mock function with given fields: ctx, wlID
func (_m *MockWhiteLabel) GetUserIDByID(ctx context.Context, wlID uuid.UUID) (int32, error) {
	ret := _m.Called(ctx, wlID)

	if len(ret) == 0 {
		panic("no return value specified for GetUserIDByID")
	}

	var r0 int32
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) (int32, error)); ok {
		return rf(ctx, wlID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) int32); ok {
		r0 = rf(ctx, wlID)
	} else {
		r0 = ret.Get(0).(int32)
	}

	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID) error); ok {
		r1 = rf(ctx, wlID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockWhiteLabel_GetUserIDByID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetUserIDByID'
type MockWhiteLabel_GetUserIDByID_Call struct {
	*mock.Call
}

// GetUserIDByID is a helper method to define mock.On call
//   - ctx context.Context
//   - wlID uuid.UUID
func (_e *MockWhiteLabel_Expecter) GetUserIDByID(ctx interface{}, wlID interface{}) *MockWhiteLabel_GetUserIDByID_Call {
	return &MockWhiteLabel_GetUserIDByID_Call{Call: _e.mock.On("GetUserIDByID", ctx, wlID)}
}

func (_c *MockWhiteLabel_GetUserIDByID_Call) Run(run func(ctx context.Context, wlID uuid.UUID)) *MockWhiteLabel_GetUserIDByID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(uuid.UUID))
	})
	return _c
}

func (_c *MockWhiteLabel_GetUserIDByID_Call) Return(_a0 int32, _a1 error) *MockWhiteLabel_GetUserIDByID_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockWhiteLabel_GetUserIDByID_Call) RunAndReturn(run func(context.Context, uuid.UUID) (int32, error)) *MockWhiteLabel_GetUserIDByID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockWhiteLabel creates a new instance of MockWhiteLabel. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockWhiteLabel(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockWhiteLabel {
	mock := &MockWhiteLabel{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
