// Code generated by MockGen. DO NOT EDIT.
// Source: profile.go
//
// Generated by this command:
//
//	mockgen -source=profile.go -destination=./mocks/profile.go -package=mockstore
//

// Package mockstore is a generated GoMock package.
package mockstore

import (
	context "context"
	reflect "reflect"

	model "code.emcdtech.com/emcd/service/email/internal/model"
	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockProfile is a mock of Profile interface.
type MockProfile struct {
	ctrl     *gomock.Controller
	recorder *MockProfileMockRecorder
	isgomock struct{}
}

// MockProfileMockRecorder is the mock recorder for MockProfile.
type MockProfileMockRecorder struct {
	mock *MockProfile
}

// NewMockProfile creates a new mock instance.
func NewMockProfile(ctrl *gomock.Controller) *MockProfile {
	mock := &MockProfile{ctrl: ctrl}
	mock.recorder = &MockProfileMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfile) EXPECT() *MockProfileMockRecorder {
	return m.recorder
}

// GetByUserID mocks base method.
func (m *MockProfile) GetByUserID(ctx context.Context, userID uuid.UUID) (model.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUserID", ctx, userID)
	ret0, _ := ret[0].(model.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUserID indicates an expected call of GetByUserID.
func (mr *MockProfileMockRecorder) GetByUserID(ctx, userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUserID", reflect.TypeOf((*MockProfile)(nil).GetByUserID), ctx, userID)
}

// GetNotificationSettings mocks base method.
func (m *MockProfile) GetNotificationSettings(ctx context.Context, userID uuid.UUID) (model.NotificationSettings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNotificationSettings", ctx, userID)
	ret0, _ := ret[0].(model.NotificationSettings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNotificationSettings indicates an expected call of GetNotificationSettings.
func (mr *MockProfileMockRecorder) GetNotificationSettings(ctx, userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNotificationSettings", reflect.TypeOf((*MockProfile)(nil).GetNotificationSettings), ctx, userID)
}
