// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: protocol/proto/coin.proto

package coin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsActive              bool           `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Title                 string         `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description           string         `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	SortPriorityMining    int32          `protobuf:"varint,5,opt,name=sort_priority_mining,json=sortPriorityMining,proto3" json:"sort_priority_mining,omitempty"`
	SortPriorityWallet    int32          `protobuf:"varint,6,opt,name=sort_priority_wallet,json=sortPriorityWallet,proto3" json:"sort_priority_wallet,omitempty"`
	MediaUrl              string         `protobuf:"bytes,7,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	IsWithdrawalsDisabled bool           `protobuf:"varint,8,opt,name=is_withdrawals_disabled,json=isWithdrawalsDisabled,proto3" json:"is_withdrawals_disabled,omitempty"`
	Networks              []*CoinNetwork `protobuf:"bytes,9,rep,name=networks,proto3" json:"networks,omitempty"`
	// Deprecated: Marked as deprecated in protocol/proto/coin.proto.
	LegacyCoinId     int32  `protobuf:"varint,10,opt,name=legacy_coin_id,json=legacyCoinId,proto3" json:"legacy_coin_id,omitempty"`
	MiningRewardType string `protobuf:"bytes,11,opt,name=mining_reward_type,json=miningRewardType,proto3" json:"mining_reward_type,omitempty"`
}

func (x *Coin) Reset() {
	*x = Coin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_coin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_coin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_protocol_proto_coin_proto_rawDescGZIP(), []int{0}
}

func (x *Coin) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Coin) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Coin) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Coin) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Coin) GetSortPriorityMining() int32 {
	if x != nil {
		return x.SortPriorityMining
	}
	return 0
}

func (x *Coin) GetSortPriorityWallet() int32 {
	if x != nil {
		return x.SortPriorityWallet
	}
	return 0
}

func (x *Coin) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *Coin) GetIsWithdrawalsDisabled() bool {
	if x != nil {
		return x.IsWithdrawalsDisabled
	}
	return false
}

func (x *Coin) GetNetworks() []*CoinNetwork {
	if x != nil {
		return x.Networks
	}
	return nil
}

// Deprecated: Marked as deprecated in protocol/proto/coin.proto.
func (x *Coin) GetLegacyCoinId() int32 {
	if x != nil {
		return x.LegacyCoinId
	}
	return 0
}

func (x *Coin) GetMiningRewardType() string {
	if x != nil {
		return x.MiningRewardType
	}
	return ""
}

type CoinNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId                  string  `protobuf:"bytes,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	NetworkId               string  `protobuf:"bytes,2,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	IsActive                bool    `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Title                   string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description             string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	ContractAddress         string  `protobuf:"bytes,6,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Decimals                int32   `protobuf:"varint,7,opt,name=decimals,proto3" json:"decimals,omitempty"`
	MinpayMining            float64 `protobuf:"fixed64,8,opt,name=minpay_mining,json=minpayMining,proto3" json:"minpay_mining,omitempty"`
	WithdrawalFee           float64 `protobuf:"fixed64,9,opt,name=withdrawal_fee,json=withdrawalFee,proto3" json:"withdrawal_fee,omitempty"`
	WithdrawalMinLimit      float64 `protobuf:"fixed64,10,opt,name=withdrawal_min_limit,json=withdrawalMinLimit,proto3" json:"withdrawal_min_limit,omitempty"`
	WithdrawalFeeTtlSeconds int32   `protobuf:"varint,11,opt,name=withdrawal_fee_ttl_seconds,json=withdrawalFeeTtlSeconds,proto3" json:"withdrawal_fee_ttl_seconds,omitempty"`
	IsMining                bool    `protobuf:"varint,12,opt,name=is_mining,json=isMining,proto3" json:"is_mining,omitempty"`
	IsWallet                bool    `protobuf:"varint,13,opt,name=is_wallet,json=isWallet,proto3" json:"is_wallet,omitempty"`
	IsFreeWithdraw          bool    `protobuf:"varint,14,opt,name=is_free_withdraw,json=isFreeWithdraw,proto3" json:"is_free_withdraw,omitempty"`
	IsWithdrawalsDisabled   bool    `protobuf:"varint,15,opt,name=is_withdrawals_disabled,json=isWithdrawalsDisabled,proto3" json:"is_withdrawals_disabled,omitempty"`
	HashDivisorPowerOfTen   int32   `protobuf:"varint,16,opt,name=hash_divisor_power_of_ten,json=hashDivisorPowerOfTen,proto3" json:"hash_divisor_power_of_ten,omitempty"`
	ExplorerUrl             string  `protobuf:"bytes,17,opt,name=explorer_url,json=explorerUrl,proto3" json:"explorer_url,omitempty"`
	Priority                int32   `protobuf:"varint,18,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *CoinNetwork) Reset() {
	*x = CoinNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_coin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinNetwork) ProtoMessage() {}

func (x *CoinNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_coin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinNetwork.ProtoReflect.Descriptor instead.
func (*CoinNetwork) Descriptor() ([]byte, []int) {
	return file_protocol_proto_coin_proto_rawDescGZIP(), []int{1}
}

func (x *CoinNetwork) GetCoinId() string {
	if x != nil {
		return x.CoinId
	}
	return ""
}

func (x *CoinNetwork) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *CoinNetwork) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *CoinNetwork) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CoinNetwork) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CoinNetwork) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *CoinNetwork) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *CoinNetwork) GetMinpayMining() float64 {
	if x != nil {
		return x.MinpayMining
	}
	return 0
}

func (x *CoinNetwork) GetWithdrawalFee() float64 {
	if x != nil {
		return x.WithdrawalFee
	}
	return 0
}

func (x *CoinNetwork) GetWithdrawalMinLimit() float64 {
	if x != nil {
		return x.WithdrawalMinLimit
	}
	return 0
}

func (x *CoinNetwork) GetWithdrawalFeeTtlSeconds() int32 {
	if x != nil {
		return x.WithdrawalFeeTtlSeconds
	}
	return 0
}

func (x *CoinNetwork) GetIsMining() bool {
	if x != nil {
		return x.IsMining
	}
	return false
}

func (x *CoinNetwork) GetIsWallet() bool {
	if x != nil {
		return x.IsWallet
	}
	return false
}

func (x *CoinNetwork) GetIsFreeWithdraw() bool {
	if x != nil {
		return x.IsFreeWithdraw
	}
	return false
}

func (x *CoinNetwork) GetIsWithdrawalsDisabled() bool {
	if x != nil {
		return x.IsWithdrawalsDisabled
	}
	return false
}

func (x *CoinNetwork) GetHashDivisorPowerOfTen() int32 {
	if x != nil {
		return x.HashDivisorPowerOfTen
	}
	return 0
}

func (x *CoinNetwork) GetExplorerUrl() string {
	if x != nil {
		return x.ExplorerUrl
	}
	return ""
}

func (x *CoinNetwork) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type GetCoinIDFromLegacyIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegacyCoinId int32 `protobuf:"varint,1,opt,name=legacy_coin_id,json=legacyCoinId,proto3" json:"legacy_coin_id,omitempty"`
}

func (x *GetCoinIDFromLegacyIDRequest) Reset() {
	*x = GetCoinIDFromLegacyIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_coin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinIDFromLegacyIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinIDFromLegacyIDRequest) ProtoMessage() {}

func (x *GetCoinIDFromLegacyIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_coin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinIDFromLegacyIDRequest.ProtoReflect.Descriptor instead.
func (*GetCoinIDFromLegacyIDRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_coin_proto_rawDescGZIP(), []int{2}
}

func (x *GetCoinIDFromLegacyIDRequest) GetLegacyCoinId() int32 {
	if x != nil {
		return x.LegacyCoinId
	}
	return 0
}

type GetCoinIDFromLegacyIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId string `protobuf:"bytes,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
}

func (x *GetCoinIDFromLegacyIDResponse) Reset() {
	*x = GetCoinIDFromLegacyIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_coin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinIDFromLegacyIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinIDFromLegacyIDResponse) ProtoMessage() {}

func (x *GetCoinIDFromLegacyIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_coin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinIDFromLegacyIDResponse.ProtoReflect.Descriptor instead.
func (*GetCoinIDFromLegacyIDResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_coin_proto_rawDescGZIP(), []int{3}
}

func (x *GetCoinIDFromLegacyIDResponse) GetCoinId() string {
	if x != nil {
		return x.CoinId
	}
	return ""
}

type GetCoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId string `protobuf:"bytes,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
}

func (x *GetCoinRequest) Reset() {
	*x = GetCoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_coin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinRequest) ProtoMessage() {}

func (x *GetCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_coin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinRequest.ProtoReflect.Descriptor instead.
func (*GetCoinRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_coin_proto_rawDescGZIP(), []int{4}
}

func (x *GetCoinRequest) GetCoinId() string {
	if x != nil {
		return x.CoinId
	}
	return ""
}

type GetCoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin *Coin `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
}

func (x *GetCoinResponse) Reset() {
	*x = GetCoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_coin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinResponse) ProtoMessage() {}

func (x *GetCoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_coin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinResponse.ProtoReflect.Descriptor instead.
func (*GetCoinResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_coin_proto_rawDescGZIP(), []int{5}
}

func (x *GetCoinResponse) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

type RequestGetWithdrawalFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId    string  `protobuf:"bytes,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	NetworkId string  `protobuf:"bytes,2,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	ToAddress string  `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amount    float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *RequestGetWithdrawalFee) Reset() {
	*x = RequestGetWithdrawalFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_coin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetWithdrawalFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetWithdrawalFee) ProtoMessage() {}

func (x *RequestGetWithdrawalFee) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_coin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetWithdrawalFee.ProtoReflect.Descriptor instead.
func (*RequestGetWithdrawalFee) Descriptor() ([]byte, []int) {
	return file_protocol_proto_coin_proto_rawDescGZIP(), []int{6}
}

func (x *RequestGetWithdrawalFee) GetCoinId() string {
	if x != nil {
		return x.CoinId
	}
	return ""
}

func (x *RequestGetWithdrawalFee) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *RequestGetWithdrawalFee) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *RequestGetWithdrawalFee) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ResponseGetWithdrawalFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fee       float64 `protobuf:"fixed64,1,opt,name=fee,proto3" json:"fee,omitempty"`
	ValidTill string  `protobuf:"bytes,2,opt,name=valid_till,json=validTill,proto3" json:"valid_till,omitempty"`
}

func (x *ResponseGetWithdrawalFee) Reset() {
	*x = ResponseGetWithdrawalFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_coin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetWithdrawalFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetWithdrawalFee) ProtoMessage() {}

func (x *ResponseGetWithdrawalFee) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_coin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetWithdrawalFee.ProtoReflect.Descriptor instead.
func (*ResponseGetWithdrawalFee) Descriptor() ([]byte, []int) {
	return file_protocol_proto_coin_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseGetWithdrawalFee) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *ResponseGetWithdrawalFee) GetValidTill() string {
	if x != nil {
		return x.ValidTill
	}
	return ""
}

type GetCoinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	WlId   *string `protobuf:"bytes,3,opt,name=wl_id,json=wlId,proto3,oneof" json:"wl_id,omitempty"`
}

func (x *GetCoinsRequest) Reset() {
	*x = GetCoinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_coin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinsRequest) ProtoMessage() {}

func (x *GetCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_coin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinsRequest.ProtoReflect.Descriptor instead.
func (*GetCoinsRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_coin_proto_rawDescGZIP(), []int{8}
}

func (x *GetCoinsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetCoinsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetCoinsRequest) GetWlId() string {
	if x != nil && x.WlId != nil {
		return *x.WlId
	}
	return ""
}

type GetCoinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins      []*Coin `protobuf:"bytes,1,rep,name=coins,proto3" json:"coins,omitempty"`
	TotalCount int32   `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetCoinsResponse) Reset() {
	*x = GetCoinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_coin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinsResponse) ProtoMessage() {}

func (x *GetCoinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_coin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinsResponse.ProtoReflect.Descriptor instead.
func (*GetCoinsResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_coin_proto_rawDescGZIP(), []int{9}
}

func (x *GetCoinsResponse) GetCoins() []*Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *GetCoinsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_protocol_proto_coin_proto protoreflect.FileDescriptor

var file_protocol_proto_coin_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x22, 0xab, 0x03, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x14, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73,
	0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x73, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c,
	0x12, 0x36, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x69, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x69,
	0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x08, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x28, 0x0a, 0x0e, 0x6c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xb1, 0x05, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x70,
	0x61, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x6d, 0x69,
	0x6e, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f,
	0x66, 0x65, 0x65, 0x5f, 0x74, 0x74, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x46, 0x65, 0x65, 0x54, 0x74, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x66,
	0x72, 0x65, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x19, 0x68, 0x61,
	0x73, 0x68, 0x5f, 0x64, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x65, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x68,
	0x61, 0x73, 0x68, 0x44, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f,
	0x66, 0x54, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6c,
	0x6f, 0x72, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x22, 0x44, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x44,
	0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x6f,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x49, 0x44, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x69,
	0x6e, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x31,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x22, 0x88, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x18,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6c, 0x6c, 0x22, 0x63, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x05, 0x77, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x77, 0x6c, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x77, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x55,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x05, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xba, 0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x49, 0x44, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x49, 0x44, 0x12, 0x22,
	0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x44, 0x46,
	0x72, 0x6f, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x49, 0x44, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x36, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x12, 0x15, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x46, 0x65, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x46,
	0x65, 0x65, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x46,
	0x65, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x65, 0x6d, 0x63, 0x64, 0x74,
	0x65, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6d, 0x63, 0x64, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x3b, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_proto_coin_proto_rawDescOnce sync.Once
	file_protocol_proto_coin_proto_rawDescData = file_protocol_proto_coin_proto_rawDesc
)

func file_protocol_proto_coin_proto_rawDescGZIP() []byte {
	file_protocol_proto_coin_proto_rawDescOnce.Do(func() {
		file_protocol_proto_coin_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_proto_coin_proto_rawDescData)
	})
	return file_protocol_proto_coin_proto_rawDescData
}

var file_protocol_proto_coin_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_protocol_proto_coin_proto_goTypes = []interface{}{
	(*Coin)(nil),                          // 0: coin.Coin
	(*CoinNetwork)(nil),                   // 1: coin.CoinNetwork
	(*GetCoinIDFromLegacyIDRequest)(nil),  // 2: coin.GetCoinIDFromLegacyIDRequest
	(*GetCoinIDFromLegacyIDResponse)(nil), // 3: coin.GetCoinIDFromLegacyIDResponse
	(*GetCoinRequest)(nil),                // 4: coin.GetCoinRequest
	(*GetCoinResponse)(nil),               // 5: coin.GetCoinResponse
	(*RequestGetWithdrawalFee)(nil),       // 6: coin.RequestGetWithdrawalFee
	(*ResponseGetWithdrawalFee)(nil),      // 7: coin.ResponseGetWithdrawalFee
	(*GetCoinsRequest)(nil),               // 8: coin.GetCoinsRequest
	(*GetCoinsResponse)(nil),              // 9: coin.GetCoinsResponse
}
var file_protocol_proto_coin_proto_depIdxs = []int32{
	1, // 0: coin.Coin.networks:type_name -> coin.CoinNetwork
	0, // 1: coin.GetCoinResponse.coin:type_name -> coin.Coin
	0, // 2: coin.GetCoinsResponse.coins:type_name -> coin.Coin
	2, // 3: coin.CoinService.GetCoinIDFromLegacyID:input_type -> coin.GetCoinIDFromLegacyIDRequest
	4, // 4: coin.CoinService.GetCoin:input_type -> coin.GetCoinRequest
	8, // 5: coin.CoinService.GetCoins:input_type -> coin.GetCoinsRequest
	6, // 6: coin.CoinService.GetWithdrawalFee:input_type -> coin.RequestGetWithdrawalFee
	3, // 7: coin.CoinService.GetCoinIDFromLegacyID:output_type -> coin.GetCoinIDFromLegacyIDResponse
	5, // 8: coin.CoinService.GetCoin:output_type -> coin.GetCoinResponse
	9, // 9: coin.CoinService.GetCoins:output_type -> coin.GetCoinsResponse
	7, // 10: coin.CoinService.GetWithdrawalFee:output_type -> coin.ResponseGetWithdrawalFee
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_protocol_proto_coin_proto_init() }
func file_protocol_proto_coin_proto_init() {
	if File_protocol_proto_coin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_proto_coin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_coin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_coin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinIDFromLegacyIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_coin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinIDFromLegacyIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_coin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_coin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_coin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetWithdrawalFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_coin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetWithdrawalFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_coin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_coin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protocol_proto_coin_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_proto_coin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocol_proto_coin_proto_goTypes,
		DependencyIndexes: file_protocol_proto_coin_proto_depIdxs,
		MessageInfos:      file_protocol_proto_coin_proto_msgTypes,
	}.Build()
	File_protocol_proto_coin_proto = out.File
	file_protocol_proto_coin_proto_rawDesc = nil
	file_protocol_proto_coin_proto_goTypes = nil
	file_protocol_proto_coin_proto_depIdxs = nil
}
