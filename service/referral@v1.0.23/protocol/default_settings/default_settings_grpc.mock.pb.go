// Code generated by MockGen. DO NOT EDIT.
// Source: protocol/default_settings/default_settings_grpc.pb.go
//
// Generated by this command:
//
//	mockgen -source protocol/default_settings/default_settings_grpc.pb.go -destination protocol/default_settings/default_settings_grpc.mock.pb.go -package default_settings
//

// Package default_settings is a generated GoMock package.
package default_settings

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockDefaultSettingsServiceClient is a mock of DefaultSettingsServiceClient interface.
type MockDefaultSettingsServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockDefaultSettingsServiceClientMockRecorder
}

// MockDefaultSettingsServiceClientMockRecorder is the mock recorder for MockDefaultSettingsServiceClient.
type MockDefaultSettingsServiceClientMockRecorder struct {
	mock *MockDefaultSettingsServiceClient
}

// NewMockDefaultSettingsServiceClient creates a new mock instance.
func NewMockDefaultSettingsServiceClient(ctrl *gomock.Controller) *MockDefaultSettingsServiceClient {
	mock := &MockDefaultSettingsServiceClient{ctrl: ctrl}
	mock.recorder = &MockDefaultSettingsServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDefaultSettingsServiceClient) EXPECT() *MockDefaultSettingsServiceClientMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDefaultSettingsServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Create", varargs...)
	ret0, _ := ret[0].(*CreateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockDefaultSettingsServiceClientMockRecorder) Create(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDefaultSettingsServiceClient)(nil).Create), varargs...)
}

// Delete mocks base method.
func (m *MockDefaultSettingsServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Delete", varargs...)
	ret0, _ := ret[0].(*DeleteResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockDefaultSettingsServiceClientMockRecorder) Delete(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockDefaultSettingsServiceClient)(nil).Delete), varargs...)
}

// Get mocks base method.
func (m *MockDefaultSettingsServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Get", varargs...)
	ret0, _ := ret[0].(*GetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockDefaultSettingsServiceClientMockRecorder) Get(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDefaultSettingsServiceClient)(nil).Get), varargs...)
}

// GetAll mocks base method.
func (m *MockDefaultSettingsServiceClient) GetAll(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetAll", varargs...)
	ret0, _ := ret[0].(*GetAllResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockDefaultSettingsServiceClientMockRecorder) GetAll(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockDefaultSettingsServiceClient)(nil).GetAll), varargs...)
}

// GetAllWithoutPagination mocks base method.
func (m *MockDefaultSettingsServiceClient) GetAllWithoutPagination(ctx context.Context, in *GetAllWithoutPaginationRequest, opts ...grpc.CallOption) (*GetAllWithoutPaginationResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetAllWithoutPagination", varargs...)
	ret0, _ := ret[0].(*GetAllWithoutPaginationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllWithoutPagination indicates an expected call of GetAllWithoutPagination.
func (mr *MockDefaultSettingsServiceClientMockRecorder) GetAllWithoutPagination(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllWithoutPagination", reflect.TypeOf((*MockDefaultSettingsServiceClient)(nil).GetAllWithoutPagination), varargs...)
}

// Update mocks base method.
func (m *MockDefaultSettingsServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Update", varargs...)
	ret0, _ := ret[0].(*UpdateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockDefaultSettingsServiceClientMockRecorder) Update(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockDefaultSettingsServiceClient)(nil).Update), varargs...)
}

// MockDefaultSettingsServiceServer is a mock of DefaultSettingsServiceServer interface.
type MockDefaultSettingsServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockDefaultSettingsServiceServerMockRecorder
}

// MockDefaultSettingsServiceServerMockRecorder is the mock recorder for MockDefaultSettingsServiceServer.
type MockDefaultSettingsServiceServerMockRecorder struct {
	mock *MockDefaultSettingsServiceServer
}

// NewMockDefaultSettingsServiceServer creates a new mock instance.
func NewMockDefaultSettingsServiceServer(ctrl *gomock.Controller) *MockDefaultSettingsServiceServer {
	mock := &MockDefaultSettingsServiceServer{ctrl: ctrl}
	mock.recorder = &MockDefaultSettingsServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDefaultSettingsServiceServer) EXPECT() *MockDefaultSettingsServiceServerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDefaultSettingsServiceServer) Create(arg0 context.Context, arg1 *CreateRequest) (*CreateResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*CreateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockDefaultSettingsServiceServerMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDefaultSettingsServiceServer)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockDefaultSettingsServiceServer) Delete(arg0 context.Context, arg1 *DeleteRequest) (*DeleteResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(*DeleteResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockDefaultSettingsServiceServerMockRecorder) Delete(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockDefaultSettingsServiceServer)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockDefaultSettingsServiceServer) Get(arg0 context.Context, arg1 *GetRequest) (*GetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*GetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockDefaultSettingsServiceServerMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDefaultSettingsServiceServer)(nil).Get), arg0, arg1)
}

// GetAll mocks base method.
func (m *MockDefaultSettingsServiceServer) GetAll(arg0 context.Context, arg1 *GetAllRequest) (*GetAllResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0, arg1)
	ret0, _ := ret[0].(*GetAllResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockDefaultSettingsServiceServerMockRecorder) GetAll(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockDefaultSettingsServiceServer)(nil).GetAll), arg0, arg1)
}

// GetAllWithoutPagination mocks base method.
func (m *MockDefaultSettingsServiceServer) GetAllWithoutPagination(arg0 context.Context, arg1 *GetAllWithoutPaginationRequest) (*GetAllWithoutPaginationResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllWithoutPagination", arg0, arg1)
	ret0, _ := ret[0].(*GetAllWithoutPaginationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllWithoutPagination indicates an expected call of GetAllWithoutPagination.
func (mr *MockDefaultSettingsServiceServerMockRecorder) GetAllWithoutPagination(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllWithoutPagination", reflect.TypeOf((*MockDefaultSettingsServiceServer)(nil).GetAllWithoutPagination), arg0, arg1)
}

// Update mocks base method.
func (m *MockDefaultSettingsServiceServer) Update(arg0 context.Context, arg1 *UpdateRequest) (*UpdateResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*UpdateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockDefaultSettingsServiceServerMockRecorder) Update(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockDefaultSettingsServiceServer)(nil).Update), arg0, arg1)
}

// mustEmbedUnimplementedDefaultSettingsServiceServer mocks base method.
func (m *MockDefaultSettingsServiceServer) mustEmbedUnimplementedDefaultSettingsServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedDefaultSettingsServiceServer")
}

// mustEmbedUnimplementedDefaultSettingsServiceServer indicates an expected call of mustEmbedUnimplementedDefaultSettingsServiceServer.
func (mr *MockDefaultSettingsServiceServerMockRecorder) mustEmbedUnimplementedDefaultSettingsServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedDefaultSettingsServiceServer", reflect.TypeOf((*MockDefaultSettingsServiceServer)(nil).mustEmbedUnimplementedDefaultSettingsServiceServer))
}

// MockUnsafeDefaultSettingsServiceServer is a mock of UnsafeDefaultSettingsServiceServer interface.
type MockUnsafeDefaultSettingsServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockUnsafeDefaultSettingsServiceServerMockRecorder
}

// MockUnsafeDefaultSettingsServiceServerMockRecorder is the mock recorder for MockUnsafeDefaultSettingsServiceServer.
type MockUnsafeDefaultSettingsServiceServerMockRecorder struct {
	mock *MockUnsafeDefaultSettingsServiceServer
}

// NewMockUnsafeDefaultSettingsServiceServer creates a new mock instance.
func NewMockUnsafeDefaultSettingsServiceServer(ctrl *gomock.Controller) *MockUnsafeDefaultSettingsServiceServer {
	mock := &MockUnsafeDefaultSettingsServiceServer{ctrl: ctrl}
	mock.recorder = &MockUnsafeDefaultSettingsServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsafeDefaultSettingsServiceServer) EXPECT() *MockUnsafeDefaultSettingsServiceServerMockRecorder {
	return m.recorder
}

// mustEmbedUnimplementedDefaultSettingsServiceServer mocks base method.
func (m *MockUnsafeDefaultSettingsServiceServer) mustEmbedUnimplementedDefaultSettingsServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedDefaultSettingsServiceServer")
}

// mustEmbedUnimplementedDefaultSettingsServiceServer indicates an expected call of mustEmbedUnimplementedDefaultSettingsServiceServer.
func (mr *MockUnsafeDefaultSettingsServiceServerMockRecorder) mustEmbedUnimplementedDefaultSettingsServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedDefaultSettingsServiceServer", reflect.TypeOf((*MockUnsafeDefaultSettingsServiceServer)(nil).mustEmbedUnimplementedDefaultSettingsServiceServer))
}
