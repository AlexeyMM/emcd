// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: protocol/whitelabel.proto

package whitelabel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WhiteLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId                int32   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SegmentId             int32   `protobuf:"varint,3,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	Origin                string  `protobuf:"bytes,4,opt,name=origin,proto3" json:"origin,omitempty"`
	Prefix                string  `protobuf:"bytes,5,opt,name=prefix,proto3" json:"prefix,omitempty"`
	SenderEmail           string  `protobuf:"bytes,6,opt,name=sender_email,json=senderEmail,proto3" json:"sender_email,omitempty"`
	Domain                string  `protobuf:"bytes,7,opt,name=domain,proto3" json:"domain,omitempty"`
	ApiKey                string  `protobuf:"bytes,8,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Url                   string  `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	Version               int32   `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	MasterSlave           bool    `protobuf:"varint,11,opt,name=master_slave,json=masterSlave,proto3" json:"master_slave,omitempty"`
	MasterFee             float64 `protobuf:"fixed64,12,opt,name=master_fee,json=masterFee,proto3" json:"master_fee,omitempty"`
	IsTwoFaEnabled        bool    `protobuf:"varint,13,opt,name=is_two_fa_enabled,json=isTwoFaEnabled,proto3" json:"is_two_fa_enabled,omitempty"`
	IsCaptchaEnabled      bool    `protobuf:"varint,14,opt,name=is_captcha_enabled,json=isCaptchaEnabled,proto3" json:"is_captcha_enabled,omitempty"`
	IsEmailConfirmEnabled bool    `protobuf:"varint,15,opt,name=is_email_confirm_enabled,json=isEmailConfirmEnabled,proto3" json:"is_email_confirm_enabled,omitempty"`
}

func (x *WhiteLabel) Reset() {
	*x = WhiteLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhiteLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhiteLabel) ProtoMessage() {}

func (x *WhiteLabel) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhiteLabel.ProtoReflect.Descriptor instead.
func (*WhiteLabel) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{0}
}

func (x *WhiteLabel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WhiteLabel) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WhiteLabel) GetSegmentId() int32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

func (x *WhiteLabel) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *WhiteLabel) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *WhiteLabel) GetSenderEmail() string {
	if x != nil {
		return x.SenderEmail
	}
	return ""
}

func (x *WhiteLabel) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *WhiteLabel) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *WhiteLabel) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WhiteLabel) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *WhiteLabel) GetMasterSlave() bool {
	if x != nil {
		return x.MasterSlave
	}
	return false
}

func (x *WhiteLabel) GetMasterFee() float64 {
	if x != nil {
		return x.MasterFee
	}
	return 0
}

func (x *WhiteLabel) GetIsTwoFaEnabled() bool {
	if x != nil {
		return x.IsTwoFaEnabled
	}
	return false
}

func (x *WhiteLabel) GetIsCaptchaEnabled() bool {
	if x != nil {
		return x.IsCaptchaEnabled
	}
	return false
}

func (x *WhiteLabel) GetIsEmailConfirmEnabled() bool {
	if x != nil {
		return x.IsEmailConfirmEnabled
	}
	return false
}

type GetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIDRequest) Reset() {
	*x = GetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDRequest) ProtoMessage() {}

func (x *GetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDRequest.ProtoReflect.Descriptor instead.
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{1}
}

func (x *GetByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WhiteLabel *WhiteLabel `protobuf:"bytes,1,opt,name=whiteLabel,proto3" json:"whiteLabel,omitempty"`
}

func (x *GetByIDResponse) Reset() {
	*x = GetByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDResponse) ProtoMessage() {}

func (x *GetByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDResponse.ProtoReflect.Descriptor instead.
func (*GetByIDResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{2}
}

func (x *GetByIDResponse) GetWhiteLabel() *WhiteLabel {
	if x != nil {
		return x.WhiteLabel
	}
	return nil
}

type GetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skip int32 `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Take int32 `protobuf:"varint,2,opt,name=take,proto3" json:"take,omitempty"`
	Sort *Sort `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *GetAllRequest) Reset() {
	*x = GetAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRequest) ProtoMessage() {}

func (x *GetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRequest.ProtoReflect.Descriptor instead.
func (*GetAllRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *GetAllRequest) GetTake() int32 {
	if x != nil {
		return x.Take
	}
	return 0
}

func (x *GetAllRequest) GetSort() *Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Asc   bool   `protobuf:"varint,2,opt,name=asc,proto3" json:"asc,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{4}
}

func (x *Sort) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Sort) GetAsc() bool {
	if x != nil {
		return x.Asc
	}
	return false
}

type Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId string `protobuf:"bytes,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	WlId   string `protobuf:"bytes,2,opt,name=wl_id,json=wlId,proto3" json:"wl_id,omitempty"`
}

func (x *Coin) Reset() {
	*x = Coin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{5}
}

func (x *Coin) GetCoinId() string {
	if x != nil {
		return x.CoinId
	}
	return ""
}

func (x *Coin) GetWlId() string {
	if x != nil {
		return x.WlId
	}
	return ""
}

type GetCoinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WlId string `protobuf:"bytes,1,opt,name=WlId,proto3" json:"WlId,omitempty"`
}

func (x *GetCoinsRequest) Reset() {
	*x = GetCoinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinsRequest) ProtoMessage() {}

func (x *GetCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinsRequest.ProtoReflect.Descriptor instead.
func (*GetCoinsRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{6}
}

func (x *GetCoinsRequest) GetWlId() string {
	if x != nil {
		return x.WlId
	}
	return ""
}

type GetCoinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins []*Coin `protobuf:"bytes,1,rep,name=coins,proto3" json:"coins,omitempty"`
}

func (x *GetCoinsResponse) Reset() {
	*x = GetCoinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinsResponse) ProtoMessage() {}

func (x *GetCoinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinsResponse.ProtoReflect.Descriptor instead.
func (*GetCoinsResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{7}
}

func (x *GetCoinsResponse) GetCoins() []*Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

type AddCoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin *Coin `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
}

func (x *AddCoinRequest) Reset() {
	*x = AddCoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCoinRequest) ProtoMessage() {}

func (x *AddCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCoinRequest.ProtoReflect.Descriptor instead.
func (*AddCoinRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{8}
}

func (x *AddCoinRequest) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

type AddCoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCoinResponse) Reset() {
	*x = AddCoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCoinResponse) ProtoMessage() {}

func (x *AddCoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCoinResponse.ProtoReflect.Descriptor instead.
func (*AddCoinResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{9}
}

type DeleteCoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin *Coin `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
}

func (x *DeleteCoinRequest) Reset() {
	*x = DeleteCoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoinRequest) ProtoMessage() {}

func (x *DeleteCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoinRequest.ProtoReflect.Descriptor instead.
func (*DeleteCoinRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCoinRequest) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

type DeleteCoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCoinResponse) Reset() {
	*x = DeleteCoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoinResponse) ProtoMessage() {}

func (x *DeleteCoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoinResponse.ProtoReflect.Descriptor instead.
func (*DeleteCoinResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{11}
}

type GetAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WhiteLabels []*WhiteLabel `protobuf:"bytes,1,rep,name=whiteLabels,proto3" json:"whiteLabels,omitempty"`
	TotalCount  int32         `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
}

func (x *GetAllResponse) Reset() {
	*x = GetAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllResponse) ProtoMessage() {}

func (x *GetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllResponse.ProtoReflect.Descriptor instead.
func (*GetAllResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllResponse) GetWhiteLabels() []*WhiteLabel {
	if x != nil {
		return x.WhiteLabels
	}
	return nil
}

func (x *GetAllResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WhiteLabel *WhiteLabel `protobuf:"bytes,1,opt,name=whiteLabel,proto3" json:"whiteLabel,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{13}
}

func (x *CreateRequest) GetWhiteLabel() *WhiteLabel {
	if x != nil {
		return x.WhiteLabel
	}
	return nil
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{14}
}

func (x *CreateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WhiteLabel *WhiteLabel `protobuf:"bytes,1,opt,name=whiteLabel,proto3" json:"whiteLabel,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateRequest) GetWhiteLabel() *WhiteLabel {
	if x != nil {
		return x.WhiteLabel
	}
	return nil
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{16}
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{18}
}

type GetBySegmentIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SegmentId int32 `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
}

func (x *GetBySegmentIDRequest) Reset() {
	*x = GetBySegmentIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBySegmentIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBySegmentIDRequest) ProtoMessage() {}

func (x *GetBySegmentIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBySegmentIDRequest.ProtoReflect.Descriptor instead.
func (*GetBySegmentIDRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{19}
}

func (x *GetBySegmentIDRequest) GetSegmentId() int32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

type GetByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetByUserIDRequest) Reset() {
	*x = GetByUserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByUserIDRequest) ProtoMessage() {}

func (x *GetByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByUserIDRequest.ProtoReflect.Descriptor instead.
func (*GetByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{20}
}

func (x *GetByUserIDRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetByOriginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *GetByOriginRequest) Reset() {
	*x = GetByOriginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByOriginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByOriginRequest) ProtoMessage() {}

func (x *GetByOriginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByOriginRequest.ProtoReflect.Descriptor instead.
func (*GetByOriginRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{21}
}

func (x *GetByOriginRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type CheckByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CheckByUserIDRequest) Reset() {
	*x = CheckByUserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckByUserIDRequest) ProtoMessage() {}

func (x *CheckByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckByUserIDRequest.ProtoReflect.Descriptor instead.
func (*CheckByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{22}
}

func (x *CheckByUserIDRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CheckByUserIDAndOriginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Origin string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *CheckByUserIDAndOriginRequest) Reset() {
	*x = CheckByUserIDAndOriginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckByUserIDAndOriginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckByUserIDAndOriginRequest) ProtoMessage() {}

func (x *CheckByUserIDAndOriginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckByUserIDAndOriginRequest.ProtoReflect.Descriptor instead.
func (*CheckByUserIDAndOriginRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{23}
}

func (x *CheckByUserIDAndOriginRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckByUserIDAndOriginRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type GetWLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WhiteLabel *WhiteLabel `protobuf:"bytes,1,opt,name=whiteLabel,proto3" json:"whiteLabel,omitempty"`
}

func (x *GetWLResponse) Reset() {
	*x = GetWLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWLResponse) ProtoMessage() {}

func (x *GetWLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWLResponse.ProtoReflect.Descriptor instead.
func (*GetWLResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{24}
}

func (x *GetWLResponse) GetWhiteLabel() *WhiteLabel {
	if x != nil {
		return x.WhiteLabel
	}
	return nil
}

type CheckWLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CheckWLResponse) Reset() {
	*x = CheckWLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckWLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWLResponse) ProtoMessage() {}

func (x *CheckWLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWLResponse.ProtoReflect.Descriptor instead.
func (*CheckWLResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{25}
}

func (x *CheckWLResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetV2WLsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetV2WLsRequest) Reset() {
	*x = GetV2WLsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetV2WLsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetV2WLsRequest) ProtoMessage() {}

func (x *GetV2WLsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetV2WLsRequest.ProtoReflect.Descriptor instead.
func (*GetV2WLsRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{26}
}

type GetV2WLsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*WhiteLabel `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetV2WLsResponse) Reset() {
	*x = GetV2WLsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetV2WLsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetV2WLsResponse) ProtoMessage() {}

func (x *GetV2WLsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetV2WLsResponse.ProtoReflect.Descriptor instead.
func (*GetV2WLsResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{27}
}

func (x *GetV2WLsResponse) GetList() []*WhiteLabel {
	if x != nil {
		return x.List
	}
	return nil
}

type GetConfigByOriginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *GetConfigByOriginRequest) Reset() {
	*x = GetConfigByOriginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigByOriginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigByOriginRequest) ProtoMessage() {}

func (x *GetConfigByOriginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigByOriginRequest.ProtoReflect.Descriptor instead.
func (*GetConfigByOriginRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{28}
}

func (x *GetConfigByOriginRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type Stratum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefId  string `protobuf:"bytes,1,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	Coin   string `protobuf:"bytes,2,opt,name=coin,proto3" json:"coin,omitempty"`
	Region string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Number string `protobuf:"bytes,4,opt,name=number,proto3" json:"number,omitempty"`
	Url    string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Stratum) Reset() {
	*x = Stratum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stratum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stratum) ProtoMessage() {}

func (x *Stratum) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stratum.ProtoReflect.Descriptor instead.
func (*Stratum) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{29}
}

func (x *Stratum) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

func (x *Stratum) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *Stratum) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Stratum) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Stratum) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefId                 string            `protobuf:"bytes,1,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	Origin                string            `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	MediaId               string            `protobuf:"bytes,3,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	Title                 string            `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Logo                  string            `protobuf:"bytes,5,opt,name=logo,proto3" json:"logo,omitempty"`
	Favicon               string            `protobuf:"bytes,6,opt,name=favicon,proto3" json:"favicon,omitempty"`
	Commission            float64           `protobuf:"fixed64,7,opt,name=commission,proto3" json:"commission,omitempty"`
	StratumList           []*Stratum        `protobuf:"bytes,8,rep,name=stratum_list,json=stratumList,proto3" json:"stratum_list,omitempty"`
	Colors                map[string]string `protobuf:"bytes,9,rep,name=colors,proto3" json:"colors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FirmwareInstruction   string            `protobuf:"bytes,10,opt,name=firmware_instruction,json=firmwareInstruction,proto3" json:"firmware_instruction,omitempty"`
	PossibleLangs         []string          `protobuf:"bytes,11,rep,name=possible_langs,json=possibleLangs,proto3" json:"possible_langs,omitempty"`
	Lang                  string            `protobuf:"bytes,12,opt,name=lang,proto3" json:"lang,omitempty"`
	WhitelabelId          string            `protobuf:"bytes,13,opt,name=whitelabel_id,json=whitelabelId,proto3" json:"whitelabel_id,omitempty"`
	IsTwoFaEnabled        bool              `protobuf:"varint,14,opt,name=is_two_fa_enabled,json=isTwoFaEnabled,proto3" json:"is_two_fa_enabled,omitempty"`
	IsCaptchaEnabled      bool              `protobuf:"varint,15,opt,name=is_captcha_enabled,json=isCaptchaEnabled,proto3" json:"is_captcha_enabled,omitempty"`
	IsEmailConfirmEnabled bool              `protobuf:"varint,16,opt,name=is_email_confirm_enabled,json=isEmailConfirmEnabled,proto3" json:"is_email_confirm_enabled,omitempty"`
	Prefix                string            `protobuf:"bytes,17,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{30}
}

func (x *Config) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

func (x *Config) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *Config) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *Config) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Config) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Config) GetFavicon() string {
	if x != nil {
		return x.Favicon
	}
	return ""
}

func (x *Config) GetCommission() float64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *Config) GetStratumList() []*Stratum {
	if x != nil {
		return x.StratumList
	}
	return nil
}

func (x *Config) GetColors() map[string]string {
	if x != nil {
		return x.Colors
	}
	return nil
}

func (x *Config) GetFirmwareInstruction() string {
	if x != nil {
		return x.FirmwareInstruction
	}
	return ""
}

func (x *Config) GetPossibleLangs() []string {
	if x != nil {
		return x.PossibleLangs
	}
	return nil
}

func (x *Config) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Config) GetWhitelabelId() string {
	if x != nil {
		return x.WhitelabelId
	}
	return ""
}

func (x *Config) GetIsTwoFaEnabled() bool {
	if x != nil {
		return x.IsTwoFaEnabled
	}
	return false
}

func (x *Config) GetIsCaptchaEnabled() bool {
	if x != nil {
		return x.IsCaptchaEnabled
	}
	return false
}

func (x *Config) GetIsEmailConfirmEnabled() bool {
	if x != nil {
		return x.IsEmailConfirmEnabled
	}
	return false
}

func (x *Config) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type WLConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *WLConfigResponse) Reset() {
	*x = WLConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WLConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WLConfigResponse) ProtoMessage() {}

func (x *WLConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WLConfigResponse.ProtoReflect.Descriptor instead.
func (*WLConfigResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{31}
}

func (x *WLConfigResponse) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetConfigByRefIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *SetConfigByRefIDRequest) Reset() {
	*x = SetConfigByRefIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigByRefIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigByRefIDRequest) ProtoMessage() {}

func (x *SetConfigByRefIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigByRefIDRequest.ProtoReflect.Descriptor instead.
func (*SetConfigByRefIDRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{32}
}

func (x *SetConfigByRefIDRequest) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetConfigByRefIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetConfigByRefIDResponse) Reset() {
	*x = SetConfigByRefIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigByRefIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigByRefIDResponse) ProtoMessage() {}

func (x *SetConfigByRefIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigByRefIDResponse.ProtoReflect.Descriptor instead.
func (*SetConfigByRefIDResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{33}
}

func (x *SetConfigByRefIDResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type AllowOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Origin string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *AllowOrigin) Reset() {
	*x = AllowOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowOrigin) ProtoMessage() {}

func (x *AllowOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowOrigin.ProtoReflect.Descriptor instead.
func (*AllowOrigin) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{34}
}

func (x *AllowOrigin) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AllowOrigin) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type SuccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SuccessResponse) Reset() {
	*x = SuccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResponse) ProtoMessage() {}

func (x *SuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResponse.ProtoReflect.Descriptor instead.
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{35}
}

func (x *SuccessResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{36}
}

type GetAllowOriginsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AllowOrigin `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetAllowOriginsResponse) Reset() {
	*x = GetAllowOriginsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllowOriginsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllowOriginsResponse) ProtoMessage() {}

func (x *GetAllowOriginsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllowOriginsResponse.ProtoReflect.Descriptor instead.
func (*GetAllowOriginsResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{37}
}

func (x *GetAllowOriginsResponse) GetList() []*AllowOrigin {
	if x != nil {
		return x.List
	}
	return nil
}

type GetStratumListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WhitelabelId string `protobuf:"bytes,1,opt,name=whitelabel_id,json=whitelabelId,proto3" json:"whitelabel_id,omitempty"`
}

func (x *GetStratumListRequest) Reset() {
	*x = GetStratumListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStratumListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStratumListRequest) ProtoMessage() {}

func (x *GetStratumListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStratumListRequest.ProtoReflect.Descriptor instead.
func (*GetStratumListRequest) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{38}
}

func (x *GetStratumListRequest) GetWhitelabelId() string {
	if x != nil {
		return x.WhitelabelId
	}
	return ""
}

type GetStratumListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StratumList []*Stratum `protobuf:"bytes,1,rep,name=stratum_list,json=stratumList,proto3" json:"stratum_list,omitempty"`
}

func (x *GetStratumListResponse) Reset() {
	*x = GetStratumListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_whitelabel_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStratumListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStratumListResponse) ProtoMessage() {}

func (x *GetStratumListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_whitelabel_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStratumListResponse.ProtoReflect.Descriptor instead.
func (*GetStratumListResponse) Descriptor() ([]byte, []int) {
	return file_protocol_whitelabel_proto_rawDescGZIP(), []int{39}
}

func (x *GetStratumListResponse) GetStratumList() []*Stratum {
	if x != nil {
		return x.StratumList
	}
	return nil
}

var File_protocol_whitelabel_proto protoreflect.FileDescriptor

var file_protocol_whitelabel_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0xd8, 0x03, 0x0a, 0x0a, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x76,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x46, 0x65, 0x65,
	0x12, 0x29, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x61, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x54,
	0x77, 0x6f, 0x46, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x69,
	0x73, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x43, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x73, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x5d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6b, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x2e,
	0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x73, 0x63, 0x22, 0x34,
	0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x13, 0x0a, 0x05, 0x77, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x77, 0x6c, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x6c, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x57, 0x6c, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x22, 0x36, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22,
	0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x39, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x14, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x6a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x47, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0a, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x20, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x2c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x2f, 0x0a,
	0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50,
	0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x41,
	0x6e, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x22, 0x47, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0a, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x2b, 0x0a, 0x0f, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x57, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x32, 0x57,
	0x4c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x56, 0x32, 0x57, 0x4c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x76, 0x0a,
	0x07, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x66, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x9e, 0x05, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x65, 0x66, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36,
	0x0a, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x31,
	0x0a, 0x14, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x61,
	0x6e, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x29, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x61, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73,
	0x54, 0x77, 0x6f, 0x46, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x69, 0x73, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x73,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x1a, 0x39, 0x0a, 0x0b, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x10, 0x57, 0x4c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x45, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x79, 0x52, 0x65, 0x66, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x34, 0x0a,
	0x18, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x52, 0x65, 0x66, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x3e, 0x0a, 0x0b, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x22, 0x2b, 0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x46, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x52, 0x0b, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xf3, 0x0c, 0x0a, 0x11, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x2e, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x19,
	0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x21, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1e, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x2e,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x57, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x16,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x41, 0x6e, 0x64,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x29, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x41, 0x6e, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x57, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x56, 0x32, 0x57, 0x4c, 0x73, 0x12, 0x1b, 0x2e, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x32, 0x57,
	0x4c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x32, 0x57, 0x4c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x24,
	0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x2e, 0x57, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x79, 0x52, 0x65, 0x66, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
	0x79, 0x52, 0x65, 0x66, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x52, 0x65, 0x66, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x1a, 0x1b, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x73, 0x12, 0x18, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75,
	0x6d, 0x12, 0x13, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x1a, 0x1b, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x12, 0x1b, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x2e, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d,
	0x5a, 0x0b, 0x2f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_whitelabel_proto_rawDescOnce sync.Once
	file_protocol_whitelabel_proto_rawDescData = file_protocol_whitelabel_proto_rawDesc
)

func file_protocol_whitelabel_proto_rawDescGZIP() []byte {
	file_protocol_whitelabel_proto_rawDescOnce.Do(func() {
		file_protocol_whitelabel_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_whitelabel_proto_rawDescData)
	})
	return file_protocol_whitelabel_proto_rawDescData
}

var file_protocol_whitelabel_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_protocol_whitelabel_proto_goTypes = []any{
	(*WhiteLabel)(nil),                    // 0: whitelabel.WhiteLabel
	(*GetByIDRequest)(nil),                // 1: whitelabel.GetByIDRequest
	(*GetByIDResponse)(nil),               // 2: whitelabel.GetByIDResponse
	(*GetAllRequest)(nil),                 // 3: whitelabel.GetAllRequest
	(*Sort)(nil),                          // 4: whitelabel.Sort
	(*Coin)(nil),                          // 5: whitelabel.Coin
	(*GetCoinsRequest)(nil),               // 6: whitelabel.GetCoinsRequest
	(*GetCoinsResponse)(nil),              // 7: whitelabel.GetCoinsResponse
	(*AddCoinRequest)(nil),                // 8: whitelabel.AddCoinRequest
	(*AddCoinResponse)(nil),               // 9: whitelabel.AddCoinResponse
	(*DeleteCoinRequest)(nil),             // 10: whitelabel.DeleteCoinRequest
	(*DeleteCoinResponse)(nil),            // 11: whitelabel.DeleteCoinResponse
	(*GetAllResponse)(nil),                // 12: whitelabel.GetAllResponse
	(*CreateRequest)(nil),                 // 13: whitelabel.CreateRequest
	(*CreateResponse)(nil),                // 14: whitelabel.CreateResponse
	(*UpdateRequest)(nil),                 // 15: whitelabel.UpdateRequest
	(*UpdateResponse)(nil),                // 16: whitelabel.UpdateResponse
	(*DeleteRequest)(nil),                 // 17: whitelabel.DeleteRequest
	(*DeleteResponse)(nil),                // 18: whitelabel.DeleteResponse
	(*GetBySegmentIDRequest)(nil),         // 19: whitelabel.GetBySegmentIDRequest
	(*GetByUserIDRequest)(nil),            // 20: whitelabel.GetByUserIDRequest
	(*GetByOriginRequest)(nil),            // 21: whitelabel.GetByOriginRequest
	(*CheckByUserIDRequest)(nil),          // 22: whitelabel.CheckByUserIDRequest
	(*CheckByUserIDAndOriginRequest)(nil), // 23: whitelabel.CheckByUserIDAndOriginRequest
	(*GetWLResponse)(nil),                 // 24: whitelabel.GetWLResponse
	(*CheckWLResponse)(nil),               // 25: whitelabel.CheckWLResponse
	(*GetV2WLsRequest)(nil),               // 26: whitelabel.GetV2WLsRequest
	(*GetV2WLsResponse)(nil),              // 27: whitelabel.GetV2WLsResponse
	(*GetConfigByOriginRequest)(nil),      // 28: whitelabel.GetConfigByOriginRequest
	(*Stratum)(nil),                       // 29: whitelabel.Stratum
	(*Config)(nil),                        // 30: whitelabel.Config
	(*WLConfigResponse)(nil),              // 31: whitelabel.WLConfigResponse
	(*SetConfigByRefIDRequest)(nil),       // 32: whitelabel.SetConfigByRefIDRequest
	(*SetConfigByRefIDResponse)(nil),      // 33: whitelabel.SetConfigByRefIDResponse
	(*AllowOrigin)(nil),                   // 34: whitelabel.AllowOrigin
	(*SuccessResponse)(nil),               // 35: whitelabel.SuccessResponse
	(*EmptyRequest)(nil),                  // 36: whitelabel.EmptyRequest
	(*GetAllowOriginsResponse)(nil),       // 37: whitelabel.GetAllowOriginsResponse
	(*GetStratumListRequest)(nil),         // 38: whitelabel.GetStratumListRequest
	(*GetStratumListResponse)(nil),        // 39: whitelabel.GetStratumListResponse
	nil,                                   // 40: whitelabel.Config.ColorsEntry
}
var file_protocol_whitelabel_proto_depIdxs = []int32{
	0,  // 0: whitelabel.GetByIDResponse.whiteLabel:type_name -> whitelabel.WhiteLabel
	4,  // 1: whitelabel.GetAllRequest.sort:type_name -> whitelabel.Sort
	5,  // 2: whitelabel.GetCoinsResponse.coins:type_name -> whitelabel.Coin
	5,  // 3: whitelabel.AddCoinRequest.coin:type_name -> whitelabel.Coin
	5,  // 4: whitelabel.DeleteCoinRequest.coin:type_name -> whitelabel.Coin
	0,  // 5: whitelabel.GetAllResponse.whiteLabels:type_name -> whitelabel.WhiteLabel
	0,  // 6: whitelabel.CreateRequest.whiteLabel:type_name -> whitelabel.WhiteLabel
	0,  // 7: whitelabel.UpdateRequest.whiteLabel:type_name -> whitelabel.WhiteLabel
	0,  // 8: whitelabel.GetWLResponse.whiteLabel:type_name -> whitelabel.WhiteLabel
	0,  // 9: whitelabel.GetV2WLsResponse.list:type_name -> whitelabel.WhiteLabel
	29, // 10: whitelabel.Config.stratum_list:type_name -> whitelabel.Stratum
	40, // 11: whitelabel.Config.colors:type_name -> whitelabel.Config.ColorsEntry
	30, // 12: whitelabel.WLConfigResponse.config:type_name -> whitelabel.Config
	30, // 13: whitelabel.SetConfigByRefIDRequest.config:type_name -> whitelabel.Config
	34, // 14: whitelabel.GetAllowOriginsResponse.list:type_name -> whitelabel.AllowOrigin
	29, // 15: whitelabel.GetStratumListResponse.stratum_list:type_name -> whitelabel.Stratum
	1,  // 16: whitelabel.WhitelabelService.GetByID:input_type -> whitelabel.GetByIDRequest
	3,  // 17: whitelabel.WhitelabelService.GetAll:input_type -> whitelabel.GetAllRequest
	13, // 18: whitelabel.WhitelabelService.Create:input_type -> whitelabel.CreateRequest
	15, // 19: whitelabel.WhitelabelService.Update:input_type -> whitelabel.UpdateRequest
	17, // 20: whitelabel.WhitelabelService.Delete:input_type -> whitelabel.DeleteRequest
	19, // 21: whitelabel.WhitelabelService.GetBySegmentID:input_type -> whitelabel.GetBySegmentIDRequest
	20, // 22: whitelabel.WhitelabelService.GetByUserID:input_type -> whitelabel.GetByUserIDRequest
	21, // 23: whitelabel.WhitelabelService.GetByOrigin:input_type -> whitelabel.GetByOriginRequest
	22, // 24: whitelabel.WhitelabelService.CheckByUserID:input_type -> whitelabel.CheckByUserIDRequest
	23, // 25: whitelabel.WhitelabelService.CheckByUserIDAndOrigin:input_type -> whitelabel.CheckByUserIDAndOriginRequest
	26, // 26: whitelabel.WhitelabelService.GetV2WLs:input_type -> whitelabel.GetV2WLsRequest
	28, // 27: whitelabel.WhitelabelService.GetConfigByOrigin:input_type -> whitelabel.GetConfigByOriginRequest
	32, // 28: whitelabel.WhitelabelService.SetConfigByRefID:input_type -> whitelabel.SetConfigByRefIDRequest
	34, // 29: whitelabel.WhitelabelService.SetAllowOrigin:input_type -> whitelabel.AllowOrigin
	36, // 30: whitelabel.WhitelabelService.GetAllowOrigins:input_type -> whitelabel.EmptyRequest
	29, // 31: whitelabel.WhitelabelService.SetStratum:input_type -> whitelabel.Stratum
	20, // 32: whitelabel.WhitelabelService.GetFullByUserID:input_type -> whitelabel.GetByUserIDRequest
	6,  // 33: whitelabel.WhitelabelService.GetCoins:input_type -> whitelabel.GetCoinsRequest
	8,  // 34: whitelabel.WhitelabelService.AddCoin:input_type -> whitelabel.AddCoinRequest
	10, // 35: whitelabel.WhitelabelService.DeleteCoin:input_type -> whitelabel.DeleteCoinRequest
	38, // 36: whitelabel.WhitelabelService.GetStratumList:input_type -> whitelabel.GetStratumListRequest
	2,  // 37: whitelabel.WhitelabelService.GetByID:output_type -> whitelabel.GetByIDResponse
	12, // 38: whitelabel.WhitelabelService.GetAll:output_type -> whitelabel.GetAllResponse
	14, // 39: whitelabel.WhitelabelService.Create:output_type -> whitelabel.CreateResponse
	16, // 40: whitelabel.WhitelabelService.Update:output_type -> whitelabel.UpdateResponse
	18, // 41: whitelabel.WhitelabelService.Delete:output_type -> whitelabel.DeleteResponse
	24, // 42: whitelabel.WhitelabelService.GetBySegmentID:output_type -> whitelabel.GetWLResponse
	24, // 43: whitelabel.WhitelabelService.GetByUserID:output_type -> whitelabel.GetWLResponse
	24, // 44: whitelabel.WhitelabelService.GetByOrigin:output_type -> whitelabel.GetWLResponse
	25, // 45: whitelabel.WhitelabelService.CheckByUserID:output_type -> whitelabel.CheckWLResponse
	25, // 46: whitelabel.WhitelabelService.CheckByUserIDAndOrigin:output_type -> whitelabel.CheckWLResponse
	27, // 47: whitelabel.WhitelabelService.GetV2WLs:output_type -> whitelabel.GetV2WLsResponse
	31, // 48: whitelabel.WhitelabelService.GetConfigByOrigin:output_type -> whitelabel.WLConfigResponse
	33, // 49: whitelabel.WhitelabelService.SetConfigByRefID:output_type -> whitelabel.SetConfigByRefIDResponse
	35, // 50: whitelabel.WhitelabelService.SetAllowOrigin:output_type -> whitelabel.SuccessResponse
	37, // 51: whitelabel.WhitelabelService.GetAllowOrigins:output_type -> whitelabel.GetAllowOriginsResponse
	35, // 52: whitelabel.WhitelabelService.SetStratum:output_type -> whitelabel.SuccessResponse
	24, // 53: whitelabel.WhitelabelService.GetFullByUserID:output_type -> whitelabel.GetWLResponse
	7,  // 54: whitelabel.WhitelabelService.GetCoins:output_type -> whitelabel.GetCoinsResponse
	9,  // 55: whitelabel.WhitelabelService.AddCoin:output_type -> whitelabel.AddCoinResponse
	11, // 56: whitelabel.WhitelabelService.DeleteCoin:output_type -> whitelabel.DeleteCoinResponse
	39, // 57: whitelabel.WhitelabelService.GetStratumList:output_type -> whitelabel.GetStratumListResponse
	37, // [37:58] is the sub-list for method output_type
	16, // [16:37] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_protocol_whitelabel_proto_init() }
func file_protocol_whitelabel_proto_init() {
	if File_protocol_whitelabel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_whitelabel_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*WhiteLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Coin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetCoinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetCoinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AddCoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AddCoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetBySegmentIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetByUserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetByOriginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CheckByUserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CheckByUserIDAndOriginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GetWLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CheckWLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetV2WLsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetV2WLsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetConfigByOriginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*Stratum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*WLConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*SetConfigByRefIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*SetConfigByRefIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*AllowOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*SuccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllowOriginsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*GetStratumListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_whitelabel_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*GetStratumListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_whitelabel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocol_whitelabel_proto_goTypes,
		DependencyIndexes: file_protocol_whitelabel_proto_depIdxs,
		MessageInfos:      file_protocol_whitelabel_proto_msgTypes,
	}.Build()
	File_protocol_whitelabel_proto = out.File
	file_protocol_whitelabel_proto_rawDesc = nil
	file_protocol_whitelabel_proto_goTypes = nil
	file_protocol_whitelabel_proto_depIdxs = nil
}
